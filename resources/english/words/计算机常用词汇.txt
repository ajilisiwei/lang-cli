computer ->> /kəmˈpjuːtər/ n. 计算机，电脑；电子计算装置
software ->> /ˈsɒftweər/ n. 软件
hardware ->> /ˈhɑːrdweər/ n. 硬件
server ->> /ˈsɜːrvər/ n. 服务器；服务者
client ->> /ˈklaɪənt/ n. 客户端；客户
network ->> /ˈnetwɜːrk/ n. 网络；网状系统
database ->> /ˈdeɪtəbeɪs/ n. 数据库
algorithm ->> /ˈælɡəˌrɪðəm/ n. 算法
program ->> /ˈproʊɡræm/ n. 程序； v. 编程
function ->> /ˈfʌŋkʃən/ n. 函数；功能
variable ->> /ˈveriəbl/ n. 变量；adj. 可变的
constant ->> /ˈkɑːnstənt/ n. 常量；adj. 不变的
array ->> /əˈreɪ/ n. 数组；排列
list ->> /lɪst/ n. 列表；清单
object ->> /ˈɑːbdʒɪkt/ n. 对象；物体
class ->> /klæs/ n. 类；班级
method ->> /ˈmeθəd/ n. 方法；方式
module ->> /ˈmɑːdʒuːl/ n. 模块；组件
package ->> /ˈpækɪdʒ/ n. 包；软件包
parameter ->> /pəˈræmɪtər/ n. 参数
argument ->> /ˈɑːrɡjumənt/ n. 参数（实参）；争论
return ->> /rɪˈtɜːrn/ v. 返回；归还；n. 返回值
input ->> /ˈɪnpʊt/ n. 输入；v. 输入
output ->> /ˈaʊtpʊt/ n. 输出；v. 输出
integer ->> /ˈɪntɪdʒər/ n. 整数
float ->> /floʊt/ n. 浮点数；v. 浮动
string ->> /strɪŋ/ n. 字符串；绳子
boolean ->> /ˈbuːliən/ n. 布尔值
loop ->> /luːp/ n. 循环；环路；v. 循环
condition ->> /kənˈdɪʃən/ n. 条件；状况
statement ->> /ˈsteɪtmənt/ n. 语句；声明
expression ->> /ɪkˈspreʃən/ n. 表达式；表情
operator ->> /ˈɑːpəreɪtər/ n. 运算符；操作员
exception ->> /ɪkˈsepʃən/ n. 异常；例外
error ->> /ˈerər/ n. 错误
debug ->> /ˌdiːˈbʌɡ/ v. 调试，排错
compile ->> /kəmˈpaɪl/ v. 编译；汇编
execute ->> /ˈeksɪkjuːt/ v. 执行；实行
deploy ->> /dɪˈplɔɪ/ v. 部署；展开
framework ->> /ˈfreɪmwɜːrk/ n. 框架；体系
library ->> /ˈlaɪbreri/ n. 库；图书馆
interface ->> /ˈɪntərfeɪs/ n. 接口；界面
protocol ->> /ˈproʊtəkɑːl/ n. 协议；规程
encryption ->> /ɪnˈkrɪpʃən/ n. 加密
decryption ->> /diːˈkrɪpʃən/ n. 解密
authentication ->> /ɔːˌθentɪˈkeɪʃən/ n. 认证；鉴别
authorization ->> /ˌɔːθərəˈzeɪʃən/ n. 授权；批准
permission ->> /pərˈmɪʃən/ n. 权限；许可
access ->> /ˈækses/ n. 访问；通路；v. 访问
resource ->> /rɪˈsɔːrs/ n. 资源
thread ->> /θred/ n. 线程；线索
process ->> /ˈproʊses/ n. 进程；过程；v. 处理
queue ->> /kjuː/ n. 队列；行列
stack ->> /stæk/ n. 栈；堆叠
cache ->> /kæʃ/ n. 缓存；贮藏
memory ->> /ˈmeməri/ n. 内存；记忆
storage ->> /ˈstɔːrɪdʒ/ n. 存储；保管
disk ->> /dɪsk/ n. 磁盘；圆盘
file ->> /faɪl/ n. 文件；档案
folder ->> /ˈfoʊldər/ n. 文件夹；折叠物
directory ->> /dəˈrektəri/ n. 目录；人名录
path ->> /pæθ/ n. 路径；路线
link ->> /lɪŋk/ n. 链接；联系
socket ->> /ˈsɑːkɪt/ n. 套接字；插座
port ->> /pɔːrt/ n. 端口；港口
domain ->> /doʊˈmeɪn/ n. 域；领域
host ->> /hoʊst/ n. 主机；主持人
IP address ->> /ˌaɪˈpiː əˈdres/ n. IP地址
URL ->> /ˌjuː ɑːr ˈel/ n. 网址；统一资源定位符
request ->> /rɪˈkwest/ n. 请求；v. 请求
response ->> /rɪˈspɑːns/ n. 响应；答复
timeout ->> /ˈtaɪmaʊt/ n. 超时
session ->> /ˈseʃən/ n. 会话；会议
cookie ->> /ˈkʊki/ n. Cookie（小型数据文件）；曲奇
token ->> /ˈtoʊkən/ n. 令牌；记号
API ->> /ˌeɪ piː ˈaɪ/ n. 应用程序接口
SDK ->> /ˌes diː ˈkeɪ/ n. 软件开发工具包
GUI ->> /ˌdʒiː juː ˈaɪ/ n. 图形用户界面
CLI ->> /ˌsiː el ˈaɪ/ n. 命令行界面
shell ->> /ʃel/ n. Shell；壳；外壳程序
script ->> /skrɪpt/ n. 脚本；手稿
command ->> /kəˈmænd/ n. 命令；指挥
version ->> /ˈvɜːrʒən/ n. 版本；译本
update ->> /ʌpˈdeɪt/ v. 更新；n. 更新
upgrade ->> /ʌpˈɡreɪd/ v. 升级；n. 升级
rollback ->> /ˈroʊlbæk/ n. 回滚；恢复
backup ->> /ˈbækʌp/ n. 备份；v. 备份
restore ->> /rɪˈstɔːr/ v. 恢复；修复
log ->> /lɔːɡ/ n. 日志；v. 记录
monitor ->> /ˈmɑːnɪtər/ n. 监控器；v. 监控
alert ->> /əˈlɜːrt/ n. 警报；提醒
issue ->> /ˈɪʃuː/ n. 问题；发行
bug ->> /bʌɡ/ n. 缺陷；漏洞
feature ->> /ˈfiːtʃər/ n. 功能；特征
release ->> /rɪˈliːs/ v. 发布；释放；n. 版本
patch ->> /pætʃ/ n. 补丁；v. 修补
merge ->> /mɜːrdʒ/ v. 合并；融合
branch ->> /bræntʃ/ n. 分支；树枝
commit ->> /kəˈmɪt/ v. 提交；n. 提交记录
repository ->> /rɪˈpɑːzɪtɔːri/ n. 代码仓库；贮藏所
clone ->> /kloʊn/ v. 克隆；复制
pull ->> /pʊl/ v. 拉取（代码）；拉
push ->> /pʊʃ/ v. 推送（代码）；推动
fork ->> /fɔːrk/ v. 派生（代码）；分叉
merge conflict ->> /mɜːrdʒ ˈkɑːnflɪkt/ n. 合并冲突
dependency ->> /dɪˈpendənsi/ n. 依赖；从属
build ->> /bɪld/ v. 构建；n. 构建版本
compile error ->> /kəmˈpaɪl ˈerər/ n. 编译错误
runtime ->> /ˈrʌntaɪm/ n. 运行时
runtime error ->> /ˈrʌntaɪm ˈerər/ n. 运行时错误
virtual machine ->> /ˈvɜːrtʃuəl məˈʃiːn/ n. 虚拟机
container ->> /kənˈteɪnər/ n. 容器
docker ->> /ˈdɑːkər/ n. Docker（容器平台）；码头工人
kubernetes ->> /ˌkuːbərˈnetiːz/ n. Kubernetes（容器管理系统）
cloud ->> /klaʊd/ n. 云；云计算
private cloud ->> /ˈpraɪvət klaʊd/ n. 私有云
public cloud ->> /ˈpʌblɪk klaʊd/ n. 公有云
hybrid cloud ->> /ˈhaɪbrɪd klaʊd/ n. 混合云
infrastructure ->> /ˈɪnfrəstrʌktʃər/ n. 基础设施
platform ->> /ˈplætfɔːrm/ n. 平台
service ->> /ˈsɜːrvɪs/ n. 服务
microservice ->> /ˈmaɪkroʊˌsɜːrvɪs/ n. 微服务
architecture ->> /ˈɑːrkɪtektʃər/ n. 架构
scalability ->> /ˌskeɪləˈbɪləti/ n. 可扩展性
availability ->> /əˌveɪləˈbɪləti/ n. 可用性
reliability ->> /rɪˌlaɪəˈbɪləti/ n. 可靠性
performance ->> /pərˈfɔːrməns/ n. 性能，表现
throughput ->> /ˈθruːˌpʊt/ n. 吞吐量
latency ->> /ˈleɪtənsi/ n. 延迟
bandwidth ->> /ˈbændwɪdθ/ n. 带宽
load balancing ->> /loʊd ˈbælənsɪŋ/ n. 负载均衡
proxy ->> /ˈprɑːksi/ n. 代理服务器
firewall ->> /ˈfaɪərwɔːl/ n. 防火墙
gateway ->> /ˈɡeɪtweɪ/ n. 网关
router ->> /ˈraʊtər/ n. 路由器
switch ->> /swɪtʃ/ n. 交换机；开关
hub ->> /hʌb/ n. 集线器
bridge ->> /brɪdʒ/ n. 桥接器
SSID ->> /ˌes es aɪ ˈdiː/ n. 服务集标识符（无线网络名）
DNS ->> /ˌdiː en ˈes/ n. 域名系统
DHCP ->> /ˌdiː eɪtʃ siː ˈpiː/ n. 动态主机配置协议
HTTP ->> /ˌeɪtʃ tiː tiː ˈpiː/ n. 超文本传输协议
HTTPS ->> /ˌeɪtʃ tiː tiː piː ˈes/ n. 安全超文本传输协议
FTP ->> /ˌef tiː ˈpiː/ n. 文件传输协议
SSH ->> /ˌes es ˈeɪtʃ/ n. 安全外壳协议
SMTP ->> /ˌes em tiː ˈpiː/ n. 简单邮件传输协议
POP3 ->> /ˌpiː oʊ piː ˈθriː/ n. 邮局协议3
IMAP ->> /ˈaɪmæp/ n. 网络邮件协议
JSON ->> /ˈdʒeɪsən/ n. JavaScript对象表示法
XML ->> /ˌeks em ˈel/ n. 可扩展标记语言
YAML ->> /ˈjæməl/ n. 一种数据序列化格式
HTML ->> /ˌeɪtʃ tiː em ˈel/ n. 超文本标记语言
CSS ->> /ˌsiː es ˈes/ n. 层叠样式表
JavaScript ->> /ˈdʒɑːvə skrɪpt/ n. JavaScript语言
TypeScript ->> /ˈtaɪp skrɪpt/ n. TypeScript语言
Python ->> /ˈpaɪθɑːn/ n. Python（编程语言）
Java ->> /ˈdʒɑːvə/ n. Java（编程语言）
C++ ->> /siː plʌs plʌs/ n. C++语言
C# ->> /siː ʃɑːrp/ n. C#语言
PHP ->> /ˌpiː eɪtʃ ˈpiː/ n. PHP语言
Ruby ->> /ˈruːbi/ n. Ruby（编程语言）
Go ->> /ɡoʊ/ n. Go语言
Swift ->> /swɪft/ n. Swift（编程语言）
Kotlin ->> /ˈkɑːtlɪn/ n. Kotlin（编程语言）
Rust ->> /rʌst/ n. Rust（编程语言）
Perl ->> /pɜːrl/ n. Perl（编程语言）
Scala ->> /ˈskɑːlə/ n. Scala（编程语言）
Objective-C ->> /əbˈdʒektɪv siː/ n. Objective-C（编程语言）
assembly ->> /əˈsembli/ n. 汇编语言；程序集
binary ->> /ˈbaɪnəri/ n. 二进制；二进制文件
hexadecimal ->> /ˌheksəˈdesɪməl/ n. 十六进制
octal ->> /ˈɑːktl/ n. 八进制
decimal ->> /ˈdesɪməl/ n. 十进制
bit ->> /bɪt/ n. 位；比特
byte ->> /baɪt/ n. 字节
kilobyte ->> /ˈkɪləbaɪt/ n. 千字节
megabyte ->> /ˈmeɡəbaɪt/ n. 兆字节
gigabyte ->> /ˈɡɪɡəbaɪt/ n. 吉字节
terabyte ->> /ˈterəbaɪt/ n. 太字节
petabyte ->> /ˈpetəbaɪt/ n. 拍字节
bandwidth ->> /ˈbændwɪdθ/ n. 带宽
latency ->> /ˈleɪtənsi/ n. 延迟
throughput ->> /ˈθruːˌpʊt/ n. 吞吐量
firewall ->> /ˈfaɪərwɔːl/ n. 防火墙
encryption ->> /ɪnˈkrɪpʃən/ n. 加密
malware ->> /ˈmælwer/ n. 恶意软件
virus ->> /ˈvaɪrəs/ n. 病毒
worm ->> /wɜːrm/ n. 蠕虫
trojan ->> /ˈtroʊdʒən/ n. 特洛伊木马
phishing ->> /ˈfɪʃɪŋ/ n. 网络钓鱼
spam ->> /spæm/ n. 垃圾邮件
adware ->> /ˈædwer/ n. 广告软件
ransomware ->> /ˈrænsəmwer/ n. 勒索软件
spyware ->> /ˈspaɪwer/ n. 间谍软件
rootkit ->> /ˈruːtkɪt/ n. Rootkit（根工具包）
patch ->> /pætʃ/ n. 补丁
hotfix ->> /ˈhɑːt fɪks/ n. 紧急修复补丁
release ->> /rɪˈliːs/ n. 版本；发布
version control ->> /ˈvɜːrʒən kənˈtroʊl/ n. 版本控制
repository ->> /rɪˈpɑːzɪtɔːri/ n. 代码仓库
commit ->> /kəˈmɪt/ n. 提交
pull request ->> /pʊl rɪˈkwest/ n. 拉取请求
issue tracker ->> /ˈɪʃuː ˈtrækər/ n. 问题追踪器
workflow ->> /ˈwɜːrkfloʊ/ n. 工作流
pipeline ->> /ˈpaɪplaɪn/ n. 流水线
deployment ->> /dɪˈplɔɪmənt/ n. 部署
integration ->> /ˌɪntɪˈɡreɪʃən/ n. 集成
continuous integration ->> /kənˈtɪnjuəs ˌɪntɪˈɡreɪʃən/ n. 持续集成
continuous delivery ->> /kənˈtɪnjuəs dɪˈlɪvəri/ n. 持续交付
continuous deployment ->> /kənˈtɪnjuəs dɪˈplɔɪmənt/ n. 持续部署
unit test ->> /ˈjuːnɪt test/ n. 单元测试
integration test ->> /ˌɪntɪˈɡreɪʃən test/ n. 集成测试
regression test ->> /rɪˈɡreʃən test/ n. 回归测试
test case ->> /test keɪs/ n. 测试用例
test coverage ->> /test ˈkʌvərɪdʒ/ n. 测试覆盖率
mock ->> /mɑːk/ n. 模拟对象；v. 模拟
stub ->> /stʌb/ n. 存根；短桩
dependency injection ->> /dɪˈpendənsi ɪnˈdʒekʃən/ n. 依赖注入
singleton ->> /ˈsɪŋɡəltən/ n. 单例
factory ->> /ˈfæktəri/ n. 工厂模式
observer ->> /əbˈzɜːrvər/ n. 观察者模式
strategy ->> /ˈstrætədʒi/ n. 策略模式
adapter ->> /əˈdæptər/ n. 适配器模式
decorator ->> /ˈdekəreɪtər/ n. 装饰器模式
proxy ->> /ˈprɑːksi/ n. 代理模式
MVC ->> /ˌem viː ˈsiː/ n. 模型-视图-控制器
MVVM ->> /ˌem viː viː ˈem/ n. 模型-视图-视图模型
RESTful ->> /restfʊl/ adj. REST风格的
SOAP ->> /soʊp/ n. 简单对象访问协议
OAuth ->> /ˈoʊˌɔːθ/ n. 开放授权协议
JWT ->> /ˌdʒeɪ dʌbəljuː ˈtiː/ n. JSON Web令牌
SAML ->> /ˈsæməl/ n. 安全断言标记语言
CI/CD ->> /siː aɪ siː diː/ n. 持续集成/持续部署
SaaS ->> /sæs/ n. 软件即服务
PaaS ->> /pæs/ n. 平台即服务
IaaS ->> /ˈaɪæs/ n. 基础设施即服务
DevOps ->> /ˈdevɒps/ n. 开发运维一体化
Abstract Factory ->> 抽象工厂
Abstract Factory Pattern ->> 抽象工厂模式
abstraction layer ->> 抽象层
access ->> 获取，存取
access modifier ->> 访问修饰符
acoustic coupler ->> 声音耦合器
Active Directory ->> 活动目录
Acyclic Dependencies Principle ->> 非循环依赖原则（ADP）
acyclic digraph ->> 有向无环图
Adapter ->> 适配器
Adapter Pattern ->> 适配器模式
Adaptive Code ->> 自适应代码
Add Parameter ->> 添加参数
ADSL ->> Asymmetrical Dingital Subscriber Loop，非对称数字用户环线
affinity ->> 绑定
affinity group ->> 地缘组
agent ->> 代理
agent-based interface ->> 代理人界面
Aggregate ->> 聚合
Aggregate Root ->> 聚合根
Agile ->> 敏捷方法论
agile practice ->> 敏捷实践
agile process ->> 敏捷流程
agility ->> 敏捷性
AI ->> Artificial Intelligence，人工智能
air waves ->> 无线电波
algorithm ->> 算法
Algorithm-of-Thought ->> 思维算法（AoT） 
analog ->> 模拟的
animation ->> 动画
annotation ->> 注解，注释
answering machine ->> 电话应答机
antenna ->> 天线
anti-pattern ->> 反模式
AoT ->> 思维算法（Algorithm-of-Thought） 
APM ->> 异步编程模型（Asynchronous Programming Model）
Apocalyptic defect ->> 灾难缺陷
application ->> 应用，应用程序，应用软件
application life cycle ->> 应用程序生命周期
application pool ->> 应用程序池
Application Programming Interface ->> 应用程序编程接口（API），目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。
Application Service ->> 应用服务
arbitrary error ->> 任意错误
architecture ->> 体系机构，结构
architecture decay ->> 架构腐坏
Architecture Style ->> 架构风格
ARPA ->> Advanced Research Projects Agency，（美国国防部）高级研究计划署
ARPAnet ->> ARPA 网
Arrange-Act-Assert ->> 准备-执行-断言（AAA）
artifact ->> 构建物
ASF ->> Apache Software Foundation 的简写
Aspect-Oriented Programming ->> 面向切面编程（AOP）
aspect ratio ->> 屏幕高宽比
assembly ->> 程序集
associative array ->> 关联数组
Asynchronous Programming Model ->> 异步编程模型（APM）
ATM ->> asynchronous transfer mode，异步传输模式
atomic operation ->> 原子操作
atomic transaction ->> 原子事务
atomicity ->> 原子性
attribute ->> 特性（C#）、属性（Java 等）
augmented reality ->> 增强实现（AR）
authentication ->> 身份验证
authorization ->> 授权
auto-generated properties ->> 自动生成的属性
automated unit testing ->> 自动化单元测试
automation ->> 自动化
autonomous ->> 独立性
auxiliary database ->> 辅助数据库
availability ->> 可用性
availability set ->> 可用性集
AZs ->> 可用性区域（Availability Zones，亚马逊 AWS 中数据中心的叫法）
BaaS ->> Battery as a Service，电池即服务（电池租用商业模式）
Backend as a Service ->> 后端即服务（BaaS）
backpane ->> 底板
backward compatibility ->> 向后兼容性
bandwidth ->> 带宽
bar code ->> 条形码
Base Class Library ->> 基类库（BCL）
baseline ->> 准线
baud ->> 波特
BCL ->> 基类库（Base Class Library）
bear ->> 熊
behavior ->> 行为
behavior preserving program transformations ->> 行为保留式程序转换
Behavioral Design Patterns ->> 行为性设计模式
Behavioral error ->> 行为错误
BERT ->> Bidirectional Encoder Representations from Transformers，谷歌公司的 LLM，对 NLP 研究产生了重大影响。该模型使用双向方法从一个词的左右两边捕捉上下文，使得各种任务的性能提高，如情感分析和命名实体识别。
BFF ->> 为前端服务的后端（Backends For Frontends）
BFS ->> 广度优先搜索
Big Ball of Mud ->> 大泥球（BBM）
big data ->> 大数据
Big Design Up Front ->> 大优先设计（BDUF）
binary ->> 二进制的
binochlar ->> 双目并用的
bit ->> 比特
Bit-field ->> 位域
bitnik ->> 比特族
blob ->> BLOB
block ->> 阻断
block blob ->> 块 BLOB
Blockchain as a Service ->> 区块链即服务（BaaS）
bottleneck ->> 瓶颈
bounded context ->> 边界上下文、界限上下文
box ->> 装箱
bps ->> bits per second，比特/秒
Brainstorming ->> 头脑风暴（脑暴）
BRD ->> 商业需求文档（Business Requirements Document）
breakpoint ->> 断点
Bridge ->> 桥接
Bridge Pattern ->> 桥接模式
broadcast ->> （无线电或电视）广播
Broken Hierarchy ->> 支离破碎的层次结构
Broken Modularization ->> 拆散的模块化
brownfield project ->> 行进中项目
Browser Object Model ->> 浏览器对象模型（BOM）
browser-server ->> 浏览器-服务器
bug ->> 缺陷
Builder Pattern ->> 建造者模式
built-in ->> 内置的，内建的；嵌入的；内置
bulkhead ->> 舱壁
business intelligence ->> 商业智能，将企业中现有的数据进行有效的整合，快速准确地提供报表并提出决策依据，帮助企业做出明智的业务经营决策。
business layer ->> 业务层
business logic layer ->> 业务逻辑层
Business Requirements Document ->> 商业需求文档（BRD）
busy (status) ->> 忙（状态）；繁忙（状态）
byte ->> 字节
cable ->> 电缆
Cache/Caching ->> 缓存
call stack ->> 调用堆栈
callout box ->> 标注框
camelCase ->> camel 大小写
canary releasing ->> 金丝雀发布
carbon copy ->> 复写本，副本；抄送（CC）
carriage return ->> 回车
Cascading Style Sheets ->> 层叠样式表（CSS）
catastrophic failover ->> 灾难性故障转移
CD ->> 持续交付（Continuous Delivery）
CDC ->> 消费者驱动的契约（Customer-Driven Contract）
CDN ->> 内容分发网络（Content Delivery Network）
cell ->> 单元
cellular telephone ->> 移动电话
Central Processing Unit ->> 中央处理器（CPU）
certificate ->> （数字）证书
Certificate Authority ->> 证书认证机构
Chain of Responsibility ->> 责任链
Chain of Responsibility Pattern ->> 责任链模式
Chain-of-Thought ->> 思维链（CoT） 
Chain-of-Thought-Self-Consistency ->> 思维链自洽性 
Change Bidirectional Association to Unidirectional ->> 将双向关联改为单向关联
Change Point ->> 修改点：需要往代码中引入修改的点
Change Reference to Value ->> 将引用对象改为值对象
Change Unidirectional Association to Bidirectional ->> 将单向关联改为双向关联
Change Value to Reference ->> 将值对象改为引用对象
channel ->> 信道，频道
character ->> 字符
Characterization test ->> 特征测试：描述软件某部分的当前行为的测试，当你修改代码时能够用来保持行为
check in ->> 签入
check out ->> 签出
checksum ->> 校验和
chip ->> 芯片
choreography ->> 协同
CI ->> 持续集成（Continuous Integration）
cipher ->> 密码
claim ->> 声明
class definition ->> 类定义
Clean Object-oriented and Layered Architecture ->> 整洁面向对象分层架构（COLA）
CLI ->> 公共语言基础结构（Common Language Infrastructure）
client-server ->> 客户端-服务器
clone ->> 克隆，复制
cloud computing ->> 云计算
cloud service ->> 云服务
CLR ->> 公共语言运行时（Common Language Runtime）
CLS ->> 公共语言规范（Common Language Specification）
cluster ->> 集群
clustered index ->> 聚集索引
co-occurring smells ->> 同时出现的坏味
CoAP ->> 受限应用协议
coaxial cable ->> 同轴电缆
COBIT ->> 信息和相关技术的控制目标，Control Objectives for Information and Related Technology
CoC ->> 更改开销（Cost of Change）
code smell ->> 代码味道
COLA ->> 整洁面向对象分层架构，Clean Object-oriented and Layered Architecture
Collapse Hierarchy ->> 折叠继承关系
comcurrency ->> 并发
command ->> 命令
Command Pattern ->> 命令模式
command prompt ->> 命令行提示
Command/Query Responsibility Segregation ->> 命令/查询职责分离（CQRS）
Command/Query Separation ->> 命令/查询分离（CQS）
commingled bits ->> 混合的比特
communication ->> 通信
community ->> 社区
committed ->> 已提交（的）
Common Intermediate Language ->> 公共中间语言
Common Language Infrastructure ->> 公共语言基础结构（CLI）
Common Language Runtime ->> 公共语言运行时（CLR）
Common Language Specification ->> 公共语言规范（CLS）
Common Type System ->> 公共类型系统（CTS）
common name ->> 通用名称
compatibility ->> 兼容性
Competing Consumer pattern ->> 消费者竞争模式
compile-time correctness checking ->> 编译时正确性检查
Component Object Model ->> 组件对象模型（COM）
Composability ->> 组合性
composite formatting ->> 复合格式化
Composite Pattern ->> 复合模式、组合模式
concurrency conflicts ->> 并发冲突
concurrency mode ->> 并发模式
conditional compilation ->> 条件编译
conditional compilation statement ->> 条件编译语句
configuration ->> 配置，设置
connection string ->> 连接字符串
Consolidate Conditional Expression ->> 合并条件表达式
Consolidate Duplicate Conditional Fragments ->> 合并重复的条件片段
consistency ->> 一致性
constructor ->> 构造函数
container ->> 容器
Container As A Service ->> 容器即服务（CaaS）
content ->> 内容
context ->> 上下文
context map, 上下文映射图 ->> 上下文地图 
Context Mapping ->> 上下文映射 
contextual keyword ->> 上下文关键字
continuous integration ->> 持续集成
contribute ->> 贡献
Contributor License Agreement ->> 贡献者许可协议
convention ->> 约定
covariance ->> 协变
contravariance ->> 逆变
convert ->> 转换
Convert Procedural Design to Objects ->> 将过程化设计转化为对象设计
cookie ->> Cookie
copy-on-write ->> 写时复制
core ->> 内核；.NET Core 的简写（能且仅能与 .NET Framework 的简写 nfx 同时出现，作如 nfx/core，单独使用时应为全称 .NET Core）
core domain ->> 核心领域
corruption ->> 损毁
Cosmetic issue ->> 外观上问题
Cost of Change ->> 更改开销（CoC）
CoT ->> 思维链（Chain-of-Thought）
COTS ->> 现成的商业软件（Commercial Off-The Shelf）
counterpoint ->> 对位
Coupling count ->> 耦合数：当一个方法被调用时传给它以及从它传出来的值的数目。如果该方法没有返回值，则耦合数就是它的参数数目。否则就是参数数目加 。如果你想要在没有测试的情况下提取出一个消防法的话，计算一下它的耦合数是很有意义的。
CPU ->> 中央处理器（Central Processing Unit）
CQRS ->> 命令查询职责分离（Command-Query Responsibility Segregation）
crash ->> （程序）崩溃
crash dump ->> 故障转储
Creational Design Patterns ->> 创建性设计模式
CRC ->> 类-职责-交互（class-responsibility-collaboration）
credential ->> 凭证
cririque ->> 评估
CRM ->> 客户关系管理（Customer Relationship Management）
Cross Domain ->> 跨域
Cross-browser ->> 跨浏览器
Cross-platform ->> 跨平台
Cross-Functional Requirement ->> 跨功能需求（CFR）
CRT ->> cathode ray tube，阴极射线管
cruft ->> 残留
cryptography ->> 密码术
CTS ->> 公共类型系统（Common Type System）
cursor ->> 光标
Customizability ->> 可定制性
cybraian ->> 电脑族
cyberspace ->> 电脑空间
cycle time ->> 周期时间
cyclic digraph ->> 有向有环图
Cyclic Hierarchy ->> 循环层次结构
Cyclically-dependent Modularization ->> 循环依赖式模块化
Cyclomatic complexity ->> 圈复杂度
DaaS ->> Data as a Service，数据即服务
DAG ->> 有向无循环图
dashboard ->> 仪表盘
data access layer ->> 数据访问层
Data Storage as a Service ->> 数据存储即服务（DaaS）
data clumps ->> 数据泥团
Data Encryption Standard ->> 数据加密标准（DES）
data layer ->> 数据层
data integrity ->> 数据完整性
data invariant ->> 数据不变式
data mining ->> 数据挖掘
data pump ->> 数据泵
Data Transfer Object ->> 数据传输对象（DTO）
declarative programming ->> 宣告式编程
Decompose Conditional ->> 分解条件表达式
Decorator Pattern ->> 修饰器模式（DP）、装饰模式
Deep Hierarchy ->> 过深的层次结构
Default Literal ->> 默认常值
Defensive Programming ->> 防御式编程
Deficient Encapsulation ->> 不充分的封装
Definition of Done ->> 完成的定义（DoD）
denial-of-service attacks ->> 拒绝服务攻击
dependency injection ->> 依赖注入（DI）
dependency ->> 依赖
dependency digraph ->> 依赖有向图
deployment ->> 部署
dequeue ->> 出列
derives from ->> 继承
design pattern ->> 设计模式
Design Requirements Document ->> 交互设计说明文档（DRD）
device ->> 设备
DFS ->> 深度优先搜索
DfT ->> 为可测试性而设计
DI ->> 依赖注入（dependency injection）
DIaaS ->> Data intelligence as a Service，数据智能即服务（出自0年月9日，阿里常规线上新品牌发布会）
diagnostics ->> 诊断
directed graph ->> 有向图
directive ->> 指令
DiRT ->> 灾难恢复测试（Disaster Recovery Test）
discussion forum ->> 论坛
disk ->> 磁盘
distributed system ->> 分布式系统
DLL ->> 动态链接库（Dynamic Link Library）
DNS ->> 域名系统（Domain Name System）
Document Object Model ->> 文档对象模型（DOM）
domain-driven design ->> 领域驱动设计（DDD）
Domain Event ->> 领域事件
Domain Model ->> 领域模型
Domain Name System ->> 域名系统（DNS）
Domain Service ->> 领域服务
Domain Specific Language ->> 领域特定语言（DSL）
DRD ->> 交互设计说明文档（Design Requirements Document）
DRY 原则 ->> 不自我重复原则（Don't Repeat Yourself），“不要重复你自己3”
duck-typing ->> 鸭子类型
duck test ->> 鸭子测试
dummy function ->> 虚构函数
dump ->> 转储
Duplicate Abstraction ->> 重复的抽象
Duplicate Observed Data ->> 复制“被监视数据”
durability ->> 持久性
Dynamic Link Library ->> 动态链接库（DLL）
EAP ->> 早期评估版本（Early Assessment Program）
EAP ->> 基于事件的异步模式（Event-based Asynchronous Pattern）
Early Assessment Program ->> 早期评估版本（EAP）
effect sketch ->> 影响草图
Egress ->> 流出
elasticity ->> 弹性
ELBs ->> 弹性负载均衡器（Elastic Load Balancers）
Element (XML) ->> 元素
Elvis Operator ->> 埃尔维斯运算符
Emergence ->> 涌现、创发、突现、呈展、演生，是一种现象。
Encapsulate Collection ->> 封装集合
Encapsulate Downset ->> 封装向下转型
Encapsulate Field ->> 封装字段
endpoint ->> 端点
enqueue ->> 入列；加入队列
Enterprise Resource Planning ->> 企业资源计划（ERP）
entity ->> 实体
Entity Tags ->> 实体标签（ETag）
entourage anti-pattern ->> 随从反模式
erosion ->> 侵蚀
Event-based Asynchronous Pattern ->> 基于事件的异步模式（EAP）
event data pump ->> 时间数据泵
event sourcing ->> 事件源
Evolvability ->> 可进化性
exception handling ->> 异常处理
Exclusive OR ->> 异或（XOR）
explanatory figures ->> 图示
Extensible Markup Language ->> 可扩展标记语言（XML）
Extensibility ->> 可扩展性
extra large ->> 特大型
extra small ->> 特小型
Extract Class ->> 提炼类
Extract Hierarchy ->> 提炼继承体系
Extract Interface ->> 提炼接口
Extract Method ->> 提炼函数
Extract Subclass ->> 提炼子类
Extract Superclass ->> 提炼超类
eXtreme Programming ->> 极限编程（XP）

Facade Pattern ->> 外观模式
Factory Method Pattern ->> 工厂方法模式
failover ->> 容错转移
failure domain ->> 故障域
fake object ->> 伪对象：在测试中伪装成一个类的合作者的对象
fan-in ->> 扇入
fan-out ->> 扇出
fat client ->> 胖客户端
FCL ->> .NET Framework 类库（Framework Class Library）
FDD ->> 软盘（Floppy Disk Drive）
feature sketch ->> 特性草图
feed ->> 聚合（资源聚合）
fine-tuning ->> 微调
first-party ->> 第一方
Floopy Disk Drive ->> 软盘（FDD）
Flyweight Pattern ->> 享元模式
follow up ->> 跟进
foreign key ->> 外键
Form Template Method ->> 塑造模板函数
format item ->> 格式项
format string ->> 格式字符串
forward ->> 转发
FPP ->> 零售版（Full Packaged Product）
Framework Class Library ->> .NET Framework 类库（FCL）
FRD ->> 功能需求文档（Functional Requirements Document）
free ->> 免费
free function ->> 自由函数：一个不属于任何类的函数。在 C 和其他过程式语言中，自由函数被简单地称为函数；在 C++ 中被称为非成员函数。在 Java 和 C# 中没有自由函数。
Functional Requirements Document ->> 功能需求文档（FRD）
full-duplex ->> 全双工
Full Packaged Product ->> 零售版（FPP）
Function Pointers ->> 函数指针
Garbage Collection ->> 垃圾回收器（GC）
gauge ->> 计量表
GC Heap ->> 垃圾回收堆
GC root ->> GC 根对象
Generalization ->> 泛化
Generalized Async ->> 通用异步
Generalized Async Return ->> 通用异步返回（C# 7.0）
generalizing specialist ->> 全科专家（敏捷开发术语）
generator ->> 生成器
Generic Attributes ->> 泛型特性
Generic Math ->> 泛型数学
Geo-Replication ->> 地域复制
Geo Redundant ->> 地域冗余
Global Assembly Cache ->> 全局程序集缓存（GAC）
global state ->> 全局状态
global using directives ->> 全局 Using 指令
Goal Directed Design ->> 目标导向设计，旨在处理并满足用户目标和动机，包含产品目标和用户目标
GoT ->> 思维图，思维图谱（Graph-of-Thought） 
GPT-3 ->> Generative Pre-trained Transformer 3，是 OpenAI 最注明的 LLM 之一 ，拥有70亿个参数。该模型在文本生成、翻译和其他任务中表现出显著的性能，在全球范围内引起了热烈的反响，目前 OpenAI 已经迭代到了更高版本。
Graph-of-Thought ->> 思维图，思维图谱（GoT） 
Graphical User Interface ->> 图像用户界面设计（GUI），是一种结合计算机科学、美学、心理学、行为学、及各商业领域需求分析的人机系统工程，强调人、机、环境三者作为一个系统进行总体设计。
GUI ->> 图像用户界面设计（Graphical User Interface）
Hackable ->> 修改方便（根据《Web API 设计与开发》一书之翻译）
HAL ->> 超文本应用程序语言（Hypertext Application Language）
handle ->> 句柄
Hard Disk Drive ->> 硬盘（HDD）
HATEOAS ->> 超媒体作为程序状态的引擎（Hypermedia As The Engine Of Application State）
HCI ->> 人机交互（Human-Computer Interaction），属于研究层面，是人与计算机之间传递、交换信息的媒介和对话接口，是计算机系统的重要组成部分。
HDD ->> 硬盘（Hard Disk Drive）
header ->> 头；标头；表头
Hexagonal Architecture ->> 六边形架构，由 Alistair Cockburn 提出
HMAC ->> 基于哈希的小系列码（Hash-based Message Authentication）
Hide Delegate ->> 隐藏“委托关系”
Hide Method ->> 隐藏函数
High Avaliability ->> 高可用性
High Fidelity Prototype ->> 高保真原型，细节都比较详细的原型
high surrogate ->> 高位代理项
Homogeneous ->> 同质化
hook ->> 钩子
hook point ->> 挂接点
Horizontal Scale ->> 水平缩放
Hosting ->> 宿主
Hub-like Modularization ->> 轮毂式模块化
HUI ->> 手持设备用户界面，包括手机端和车载导航等（Handset User Interface）
Human-Computer Interaction ->> 人机交互（HCI）
Humane Registry ->> 人文注册表（由 Martin Fowler 提出）
Hybrid Cloud ->> 混合云
hypertext-driven ->> 超文本驱动
HyperText Markup Language ->> 超文本标记语言（HTML）
IA ->> 信息架构（Information Architect）；
Iaas ->> 设施即服务（Infrastructure as a Service）
Idempotence ->> 幂等性
Idempotent Operation ->> 幂等操作
Identity Provider ->> 身份提供方
IL ->> 中间语言（intermediate language）
Illegitimate Injection ->> 非法注入
IM ->> 即时通讯（Instant Messaging）
image ->> 映像
immersion approach ->> 沉浸法
Imperative Abstraction ->> 命令式抽象
in-context learning ->> 上下文学习 
Incomplete Abstraction ->> 不完整的抽象
index ->> 索引
Information Architect ->> 信息架构（IA）
Infrastructure as a Service ->> 设施即服务（Iaas）
ingesting ->> 摄取
ingress ->> 流入
Inline Class ->> 将类内联化
Inline Method ->> 内联函数
Inline Temp ->> 内联临时变量
input endpoint ->> 输入端点
instance ->> 实例
Instance InputEndpoint ->> 实例输入端点
Instant Messaging ->> 即时通讯（IM）
instantiation ->> 实例化
instantiator ->> 实例化器
instruction fine-tuning ->> 指令微调
Insufficient Modularization ->> 不充分的模块化
Interaction-based testing ->> 基于交互的测试
Intercept ->> 截取
interception point ->> 拦截点：可以编写测试来感知某些条件的地方
intermediate language ->> 中间语言（IL）
Internal Endpoint ->> 内部端点
Internet Information Service ->> Internet 信息服务（IIS）
Internet Protocol ->> 互联网协议（IP）
Interpreter Pattern ->> 解释器模式
interpolated strings ->> 内插字符串
Introduce Assertion ->> 引入断言
Introduce Explaining Variable ->> 引入解释性变量
Introduce Foreign Method ->> 引入外加函数
Introduce Local Extension ->> 引入本地扩展
Introduce Null Object ->> 引入 Null 对象
Introduce Parameter Object ->> 引入参数对象
Intrusion Detection Systems ->> 入侵检测系统（IDS）
Intrusion Prevention Systems ->> 入侵预防系统（IPS）
Inversion of Control ->> 控制反转（IoC）
Isolation ->> 隔离性
isomorphism ->> 同构（数学领域专用术语）
iterable ->> 可迭代的
iteration ->> 迭代
iterator ->> 迭代器
Iterator Pattern ->> 迭代模式
iterator protocol ->> 迭代器协议
Job ->> 作业
Job Description ->> 岗位描述（JD）
JOSE ->> JSON 对象签名和加密
Json Web Token ->> JSON Web 令牌
just-in-time compilation ->> 即时编译，JIT 编译
JVM ->> Java 虚拟机（Java Virtual Machine）
Key ->> 密钥
key-event notification ->> 键事件通知
Key Opinion Leader ->> 关键意见领袖（KOL），俗称大 V
Key Performance Indicator ->> 关键绩效考核指标（KPI）
Key Space ->> 键空间
key-space notification ->> 键空间通知
Key-Value Pair ->> 键-值对
KISS 原则 ->> 保持简单原则（Keep It Simple Silly），“简单是一切之本3”
KPI ->> 关键绩效考核指标（Key Performance Indicator）
Language Integrated Query ->> 语言集成查询（LINQ）
Large ->> 大型
Large Language Model ->> 大型语言模型（LLM） 
Layered Architecture ->> 分层架构
LDAP ->> Lightweight Directory Access Protocol，轻型目录访问协议
Leaky Encapsulation ->> 泄露的封装
Legacy system ->> 遗留系统
license ->> 许可证
lifetime ->> 生命周期
Lightweight Directory Access Protocol ->> 轻量级目录访问协议（LDAP）
LINE of Business ->> 业务线（LOB）
link ->> 链接
link seam ->> 连接期接缝：在连接期接缝处，可以通过连接到另一个库来替换行为。在编译型语言中可替换的东西包括产品库、DLL、程序集或 JAR 文件。其目的是为了解除依赖，或感知某些在测试期间可有能会发生的条件。
linked resource ->> 链接的资源
Liskov Substitution Principle ->> 里氏替换原则（LSP）
literal ->> 字面量、文字常量、直接量
living style guides ->> 活样式指导
LLM ->> 大型语言模型（Large Language Model） 
load-balancing ->> 负载平衡
load balancer ->> 负载平衡器
load factor ->> 负载因子
load shedding ->> 减载
LOC ->> 代码行数
Local Function ->> 局部函数
lock-step release ->> 同步发布
log ->> 日志
loop ->> 自循环
loose coupling ->> 松散耦合
Low Fidelity Prototype ->> 低保真原型，抽象原型视图
low surrogate ->> 低位代理项
LSUD ->> 大批你所不知道的开发人员（Large Set of Unknown Developers）
Mainframe ->> 主机
Maintainability ->> 可维护性
managed code ->> 托管代码
managed execution ->> 托管执行
Man-In-The-Middle Attack ->> 中间人攻击（MITM 攻击）
Management Key ->> 管理密钥
manifest ->> 清单
map ->> 映射
Market Requirement Document ->> 市场需求文档（MRD）
Massive Multiplayer Online Role-Playing Game ->> 大型多人在线角色扮演游戏（MMORPG）
Massively Multiplayer Online Role-Playing Game ->> 大型多人在线角色扮演游戏（MMORPG）
Mathematical Markup Language ->> 数学标记语言（MathML）
Mean Time Between Failures ->> 平均故障时间间隔（MTBF）
Mean Time To Repair ->> 平均修复时间（MTTR）
Media Service ->> 媒体服务
Mediator Pattern ->> 中介者模式
Medium ->> 中型
Memento Pattern ->> 备忘录模式
Merge ->> 合并
Metadata ->> 元数据
metaprogramming ->> 元编程
Middleware ->> 中间件
mind map ->> 思维导图、脑图、心智图
Minimum Marketable Feature ->> 最小可售特性（MMF）
Minimum Viable Product ->> 最小化可行产品（MVP）
Minimum Viable Release ->> 最小可行发布（MVR）
Missing Abstraction ->> 缺失抽象
Missing Encapsulation ->> 缺失的封装
Missing Hierarchy ->> 缺失层次结构
Mixed Reality ->> 混合现实（MR）
Mobile Service ->> 移动服务
Mock Object ->> 模拟对象，仿对象：在内部对条件进行断言的伪对象
Move Field ->> 搬移字段
Move Method ->> 搬移函数
MRD ->> 市场需求文档（Market Requirement Document）
Multitenancy ->> 多租户
Multifaced Abstraction ->> 多方面抽象
Multipath Hierarchy ->> 多路径层次结构
Multitier Architecture ->> 多层体系结构
Multi-factor Authentication ->> 多重验证
naming collisions ->> 命名冲突
Namespace ->> 命名空间，名称空间
native code ->> 本机代码
NCC ->> .NET Core 社区（.NET Core Community）/.NET 中国社区（.NET China Community）
Near Field Communication ->> 近距离无线通信（NFC）
network hops ->> 网络跳数
NFC ->> 近距离无线通信（Near Field Communication）
nfx ->> .NET Framework（.NET 框架）
Non-clustered Index ->> 非聚集索引
non-managed code ->> 非托管代码
non-optional ->> 非可选的
non-transactional pipeline ->> 非事务型流水线
node ->> 节点
normalize ->> 规格化
notification ->> 通知
notification hub ->> 通知中心
Null Object Pattern ->> 空对象模式
null-coalescing ->> 空值合并
Null coalescing operator ->> 空值合并运算符、空值结合运算符
N-Tier ->> N 层（结构）
obfuscator ->> 混淆器
Object Pool ->> 对象池
Object Pool Pattern ->> 对象池模式
Object/Relational Mapper ->> 对象/关系映射器（ORM，O/RM）
object seam ->> 对象接缝：在对象连接处可以通过替换一个对象为另一个对象来“更替”行为。在面向对象语言中，通常通过子类化产品代码中的类并重写其方法来实现这一点。
Objectives and Key Results ->> 目标与关键成果法（OKR）
Observer Pattern ->> 观察者模式
On-demand (media) ->> 点播（媒体）
Once and Only Once ->> 一次且仅一次3(OAOO)
One rule, one place ->> 一个规则，实现一次
One-Size-Fits-All ->> OSFA
one-time token ->> 一次性令牌
Onion Architecture ->> 洋葱架构，由 Jeffrey Palermo 提出
Open Closed Principle ->> 开闭原则（OCP）
Open System Interconnection ->> 开放式系统互联（OSI）
Operating System ->> 操作系统（OS）
Optical Character Recognition ->> 光学字符识别（OCR）
Optimistic Concurrency ->> 乐观并发控制
optimistic locking ->> 乐观锁
orchestration ->> 编排
Orchestration Layer ->> 策略编排层
Ordering Principal ->> 良序原则
OS ->> 操作系统（Operating System）
OSGI ->> 开放服务网关协议（Open Source Gateway Initiative）
overriding ->> 重写
Overview ->> 概览
over-post ->> 过度提交
OWASP ->> 开放式 Web 应用程序安全项目（Open Web Application Security Project）
PP ->> 个人对个人（Person-to-Person）
Paas ->> 平台即服务（Platform As A Service）
packet sniffing ->> 分组嗅探
Page Blob ->> 页 BLOB
Parameterize Method ->> 令函数携带参数
Partial Translate ->> 部分翻译（出自 Chrome 浏览器）
partition ->> 分区
Partition tolerance ->> 分区容忍性
PascalCase ->> Pascal 大小写
pass-through ->> 直托
passive ->> 被动（的）
pattern ->> 模式
Pay as You Go ->> 即用即付
PC ->> 个人计算机（Personal Computer）
peek ->> 查看
peering rules ->> 对等交互规则
Percent Encoding ->> 百分号编码
performance ->> 性能
performance counter ->> 性能计数器
performance-oriented ->> 面向性能
Person-to-Person ->> 个人对个人（PP）
Personal Computer ->> 个人计算机（PC）
Pessimistic Concurrency ->> 悲观并发控制
pessimistic locking ->> 悲观锁
PHAME ->> 由 Booch 提出的对象模型的  个主要元素的设计规则的统称，即 Principle of Hierarchy, Abstraction, Modularization, and Encapsulation，层次结构、抽象、模块化与封装原则
pinch point ->> 汇点：影响结构图中的隘口和交通要冲，在汇点编写测试的好处就是只需针对少数几个方法编写测试，就能达到探测大量其他方法的改动的目的。
placeholder ->> 占位符
Platform as a Service ->> 平台即服务（Paas）
PMD ->> 项目管理文档（Program Managment Document）
point of invocation of the method ->> 方法调用点
Point-to-Site ->> 点到站点
polling ->> 轮询
polymorphism ->> 多态
polyrot programming ->> 多语言编程
Poor Man’s Dependency Injection ->> 穷人的依赖注入
post-initialization ->> 后初始化
postcondition ->> 后置条件
PoT ->> 程序思维（Program-to-Thoughts） 
PRD ->> 产品需求文档（Product Requirements Document）
pre-flight request ->> 事先请求
pre-initialization ->> 预初始化
pre-training ->> 预训练 
Predicate Decorator ->> 谓词修饰器
precondition ->> 前提，前置条件
presentation layer ->> 表现层
Preserve Whole Object ->> 保持对象完整
primary database ->> 主数据库
primary storage ->> 主存储
primitive obsession ->> 基本类型偏执
principal ->> 主体
Private Class Data Pattern ->> 私有类数据模式
private cloud ->> 私有云
priority queue ->> 优先级队列
probe ->> 探测器
process ->> 进程
producer ->> 生产者
product backlog ->> 产品积压工作
Product Owner ->> 产品负责人（PO）
Product Requirements Document ->> 产品需求文档（PRD）
production ->> 生产（环境）
production load ->> 生产负载
Program Managment Document ->> 项目管理文档（PMD）
Program-to-Thoughts ->> 程序思维（PoT） 
programming by difference ->> 差异式编程
proof of concept ->> 概念验证
proportional error rate ->> 错误率比例
protected variation ->> 防止变异
protocol ->> 协议
prototype ->> 原型
Prototype Pattern ->> 原型模式
proxy ->> 代理
Proxy Pattern ->> 代理模式
public cloud ->> 公有云
Pull Up Constructor Body ->> 构造函数本体上移
Pull Up Field ->> 字段上移
Pull Up Method ->> 函数上移
push ->> 推送
Push Down Field ->> 字段下移
Push Down Method ->> 函数下移
quality assurance ->> 质量保证（QA）
Queue ->> 队列
Quota ->> 配额
Rack ->> 机架
RAII ->> Resource Acquisition Is Initialization，资源获取即初始化
Rapid Application Development ->> 快速应用程序开发（RAD）
RDBMS ->> 关系型数据库管理系统（Relational Database Management System）
Reactive extensions ->> 响应式扩展（Rx）
Ready (status) ->> 就绪（状态）
real-time ->> 即时、实时
real-time discussions ->> 即时讨论、实时讨论
Rebellious Hierarchy ->> 叛逆性层次结构
recursion ->> 递归
Redundancy ->> 冗余
Redundant ->> 冗余（的）
Ref Return ->> 应用返回
Ref Local ->> 局部引用
Ref Property ->> 引用属性
Ref-Safe-to-Escape ->> 引用安全逃逸
Ref-Safe-to-Escape scope ->> 引用安全逃逸范围
Refactor ->> 重构
region ->> 地域
reification ->> 具体化
Reinforcement Learning ->> 强化学习，一种机器学习的方法，通过从外部获得激励来校正学习方向从而获得一种自适应的学习能力
Reinforcement Learning from Human Feedback ->> 基于人工反馈的强化学习（RLHF）
relay ->> 中继
Relevancy ->> 适切性
Reliability ->> 可靠性
Relying Party ->> 依赖方
Remove Assignments to Parameters ->> 移除对参数的赋值
Remove Control Flag ->> 移除控制标记
Remove Middle Man ->> 移除中间人
Remove Parameter ->> 移除参数
Remove Setting Method ->> 移除配置函数
Rename Method ->> 函数改名
Replace Array with Object ->> 以对象取代数组
Replace Conditional with Polymorphism ->> 以多态取代条件表达式
Replace Constructor with Factory Method ->> 以工厂函数取代构造函数
Replace Data Value with Object ->> 以对象取代数据值
Replace Delegation with Inheritance ->> 以继承取代委托
Replace Error 　 Code with Exception ->> 以异常取代错误码
Replace Exception with Test ->> 以测试取代异常
Replace Inheritance with Delegation ->> 以委托取代继承
Replace Magic Number with Symbolic Constant ->> 以字面常量取代魔法数
Replace Method with Method Object ->> 以函数对象取代函数
Replace Nested Conditional with Guard Clauses ->> 以卫语句取代嵌套条件表达式
Replace Parameter with Explicit Methods ->> 以明确函数取代参数
Replace Parameter with Methods ->> 以函数取代参数
Replace Record with Data Class ->> 以数据类取代记录
Replace Subclass with Fields ->> 以字段取代子类
Replace Temp with Query ->> 以查询取代临时变量
Replace Type Code with Class ->> 以类取代类型码
Replace Type Code with State/Strategy ->> 以 State/Strategy 取代类型码
Replace Type Code with Subclass ->> 以子类取代类型码
reporting ->> 报表
Repository ->> 存储库；仓储；仓库；资源库
REpresentational State Transfer ->> 表述性状态转移、表征性状态传输、具象状态传输（REST）
request pipeline ->> 请求管道
Requirements Churn ->> 需求波动
reserved ->> 专属
resolution ->> 解析
Resource Acquisition Is Initialization ->> 资源获取即初始化（RAII）
Resource Release Is Destruction ->> 在构造时没有“获取”资源，但在析构时释放资源（RRID），一种 RAII 的特殊用法
Resource-Oriented Architecture ->> 面向资源的架构(ROA)
Response Group ->> 响应群
Return on Investment ->> 投资回报（ROI）
reverse proxy module ->> 反向代理模块
retail ->> 零售版
Rich Client ->> 丰富客户端
Ripple Effect ->> 涟漪效应
RLHF ->> 基于人工反馈的强化学习（Reinforcement Learning from Human Feedback）
role ->> 角色
Rolling Upgrade ->> 滚动升级
round-robin ->> 轮流（分配）；轮叫
round-tripping ->> 还原；回传；往返，往返切换
router ->> 路由器
row ->> 行
RPC ->> 远程过程调用（Remote Procedure Call）
RRID ->> Resource Release Is Destruction，在构造时没有“获取”资源，但在析构时释放资源，一种 RAII 的特殊用法
Saas ->> 软件即服务（Software As A Service）
Safe-to-Escape ->> 安全逃逸
Safe-to-Escape scope ->> 安全逃逸范围
salted password hashing ->> 加盐密码哈希
SAN ->> 存储区域网络（Storage Area Network）
SASL ->> 简单认证与安全层
Scalability ->> 缩放性
Scalable Vector Graphic ->> 可伸缩矢量图（SVG）
Scale ->> 缩放
Scale Out ->> 向外缩放
Scale Up ->> 向上缩放
scaling pattern ->> 扩展模式
Schema (database) ->> 架构（数据）
Schema (xml) ->> 架构（xml）
Scrum Master ->> Scrum 主管（SM）
SDK ->> 软件开发工具箱（Software Development Kits）
seam ->> 接缝：程序中的一些特殊的点，可以让你无需做任何修改就能达到修改程序行为的目的。
Search Engine ->> 搜索引擎（SE）
Search Engine Marketing ->> 搜索引擎营销（SEM）
Search Engine Optimization ->> 搜索引擎优化（SEO）
secondary storage ->> 二级存储
Secure Socket Layer ->> 安全套接层（SSL）
Security ->> 安全（性）
Security Development Lifecycle ->> 安全开发生命周期
Security Socket Layer ->> 安全套接层
Security Token ->> 安全令牌
Self Encapsulate Field ->> 自封装字段
self-hosted ->> 自管理主机
Self-signed Certificate ->> 自签名证书
Semantic Kernel ->> 语义核心 
semantic monitoring ->> 语义监控
Semantic Versioning ->> 语义化版本控制
Separate Domain from Presentation ->> 将领域和表述/显示分离
Separate Query from Modifier ->> 将查询函数和修改函数分离
Serializable ->> 可序列化
Server Affinity ->> 服务器绑定
Server Driven Content Negotiation ->> 服务器驱动的内容协商
Server Side Render ->> 服务器渲染（SSR）
Service Bus ->> 服务总线
Service Contract ->> 服务合同
Service Level Agreement ->> 服务水平协议（SLA）
Service Provider ->> 服务提供方
session jacking ->> 会话劫持
Setting ->> 设置
Shared ->> 共享；分享
shared-memory data structure ->> 共享内存数据结构
Short-circuit evaluation ->> 短路求值
Sign in ->> 登录
Sign out ->> 注销
Signature ->> 签名
Single Level of Abstraction Principle ->> 单一抽象层次原则（SLAP）
Single responsibility principle ->> 单一职责原则（SRP）
Single Page Application ->> 单页面应用（SPA）
single point of failure ->> 单一故障点（SPOF）
Singleton Pattern ->> 单例模式
Site ->> 站点
Site-to-Site ->> 站点到站点
Skeleton-to-Thought ->> 思维框架（SoT） 
skip list ->> 跳跃表
SLA ->> 服务水平协议、服务等级协议（Service Level Agreement）
Small ->> 小型
smart endpoint ->> 智能端点
snapshot ->> 快照
SOA ->> 面向服务的架构（Service-Oriented Architecture）
SoT ->> 思维框架（Skeleton-to-Thought） 
Software as a Service ->> 软件即服务（Saas）
source lines of code ->> 源代码行数（SLOC）
Speculative Hierarchy ->> 凭空想象的层次结构
Split Temporary Variable ->> 分解临时变量
sprint ->> 冲刺（敏捷开发术语）
sprint backlog ->> 冲刺积压工作
SQL Database ->> SQL 数据库
SSKD ->> 少量你所知道的开发人员（Small Set of Known Developers）
SSO ->> 单点登录（Single Sign-On）
stage ->> 阶段
Staging ->> 过渡（环境）
state indeterminism ->> 状态不确定性
State-based testing ->> 基于状态的测试
State Pattern ->> 状态模式
Stateless ->> 无状态
Sticky Session ->> 黏性会话
Stickyness ->> 黏性；黏度
story ->> 故事（敏捷开发术语）
Storage ->> 存储
Storage Account ->> 存储账户
Strangler Application Pattern ->> 绞杀者模式
strategic development tools ->> 战略设计工具 ，战略开发工具
Strategy Pattern ->> 策略模式
Stream ->> 流
Structural Design Patterns ->> 结构性设计模式
structure ->> 结构
Structured Systems Analysis and Design Methodology ->> 结构化系统分析和设计方法（SSADM）
Subnet ->> 子网
Subordinate ->> 附属
Sub-region ->> 子地域
Subdomain ->> 子领域
Subscription ->> 订阅
Substitute Algorithm ->> 替换算法
SW ->> Apache SkyWalking 的简写
symbol table ->> 符号表
Synchronized Multimedia Integration Language ->> 同步多媒体集成语言（SMIL）
syntactic sugar ->> 语法糖
System Under Test ->> 测试目标系统（SUT）
Table ->> 表
tactical development tools ->> 战术实施工具 ，战术开发工具
TAP, ->> 基于任务的异步模式
targeted testing ->> 目标测试
Task-based Asynchronous Pattern ->> 基于任务的异步模式
TCP ->> 传输控制协议（Transmission Control Protocol）
TDD ->> 测试驱动开发（Test-Driven Development）
Tease Apart Inheritance ->> 梳理并分解继承体系
technical bankruptcy ->> 技术破产
Technical Debt ->> 技术债务（TDBT）
Template Method Pattern ->> 模板方法模式
Tenant ->> 租户
Terminus ->> 端点
test doubles ->> 测试替身
Test-Driven Development ->> 测试驱动开发（TDD）
test harness ->> 测试用具
the normalization of deviance ->> 异常正常化
Thin Client ->> 瘦客户端
Thread ->> 线程
Thread Environment Block ->> 线程环境块
Thread Kernel Object ->> 线程内核对象
Thread Pool ->> 线程池
Thread Starvation ->> 线程饥荒
Throttle ->> 节流；限速
Timestamp ->> 时间戳
Throughput ->> 吞吐量
TNP ->> 交通网络提供者（Transportation Network Providers）
TOFU ->> 首次使用时信任（Trust On First Use）
Topic ->> 主题
Topology ->> 拓扑结构
Token ->> 令牌
Top-level statements ->> 顶级语句
ToT ->> 思维树（Tree-of-Thought）
TPL ->> 任务并行库
(Code) Tracing ->> （代码）追踪
Transaction ->> 事务
Transaction Script ->> 事务脚本
Transient Error ->> 瞬时错误
Transparent Data Encryption ->> 透明数据加密
Transportation Network Providers ->> 交通网络提供者（TNP）
Tree-of-Thought ->> 思维树（ToT） 是一种通过将复杂问题分解为更易于解决的小问题，为 LLM 推理提供更结构化的提示框架
Type Bloat ->> 类型膨胀
UAT ->> 用户验收测试（User Acceptance Testing）
Ubiquitous Computing ->> 普存计算
Ubiquitous Language ->> 统一语言
UDDI ->> 通用描述、发现与集成服务（Universal Description, Discovery, and Integration）
UI ->> 用户界面，包括视觉设计、交互设计和用户体验（User Interface）
Uncommitted ->> 未提交（的）
Update Domain ->> 更新域
unbox ->> 拆箱
under-post ->> 提交不足
undirected graph ->> 无向图
Unexploited Encapsulation ->> 未利用封装
Unfactored Hierarchy ->> 未归并的层次结构
Unified Modeling Language ->> 统一建模语言（UML）
Uniform Interface ->> 统一接口
Uniform Resource Locator ->> 统一资源定位符（URL）
unit of work ->> 工作单元
Unit test ->> 单元测试
unit test coverage ->> 单元测试覆盖率
unit-testing harnesses ->> 单元测试用例
unmanaged code ->> 非托管代码
Unmanaged Pointers ->> 非托管指针
Unnecessary Abstract ->> 不必要的抽象
Unnecessary Hierarchy ->> 不必要的层次结构
unnecessary overhead ->> 不必要的开销
Unutilized Abstraction ->> 未用的抽象
Usability Review ->> 可用性评估
User Acceptance Test ->> 接受度测试（UAT）
User Analysis ->> 用户分析
User Datagram Protocol ->> 用户数据报协议（UDP）
User Interface ->> 用户界面，包括视觉设计、交互设计和用户体验（UI）
User Mode Stack ->> 用户模式栈
Value Object ->> 值对象
variant ->> 变体
Variation Encapsulation Principle ->> 变化封装原则（VEP）
versionable interaction contract ->> 可以进行版本控制的交互契约
Vertical Scale ->> 垂直缩放
VES ->> 虚拟执行系统（Visual Execution System）
viscosity ->> 粘滞性
VIP ->> 虚拟 IP（或不译）
VIP Swap ->> VIP 交换
Virtual Execution System ->> 虚拟执行系统（VES）
Virtual Network ->> 虚拟网络
Virtual Machine ->> 虚拟机
Virtual Private Network ->> 虚拟专用网络（VPN），在公用网络上建立专用网络，进行加密通讯，如网关通过对数据包的加密和数据包目标地址的转换实现远程访问。
Virtual Reality ->> 虚拟现实（VR）
viscosity ->> 粘稠性
Visitor Pattern ->> 访问者模式
VLO ->> 团体批量许可证；大量采购授权合约（Volume Licensing for Organizations）
VOL ->> 团体批量许可证；大量采购授权合约（Volume Licensing for Organizations）
Volume Licensing for Organizations ->> 团体批量许可证；大量采购授权合约（VOL 或 VLO）
VPC ->> 虚拟私有云（Virtual Private Cloud）
VPN ->> 虚拟专用网络（Virtual Private Network）
WCF ->> Windows 通讯开发平台（Windows Comminication Foundation）
Weak Generational Hypothesis ->> 弱分代假设
Wearable Device ->> 可穿戴设备
Web Role ->> 网站角色
Web Scraping ->> 网络爬虫
Web Service ->> 网络服务
Web Service Definition Language ->> Web 服务定义语言（WSDL）
Web Sites ->> 网站
Weighted Method per Class ->> 类累计圈复杂度（WMC）
WF ->> 工作流（WIndows Workflow）
Wide Hierarchy ->> 过宽的层次结构
Windows Comminication Foundation ->> 分布式通信（WCF）
Windows Internet Name Service ->> Windows Internet 命名服务（WINS）
Windows Management Instrumentation ->> Windows 管理规范（WMI）
Windows Presentation Foundation ->> 富客户端表示（WPF）
Windows Workflow ->> 工作流（WF）
WINS ->> Windows Internet 命名服务（Windows Internet Name Service）
WINS Proxy ->> WINS 代理
WINS Resource ->> WINS 资源
wireless communication ->> 无线通讯
WMI ->> Windows 管理规范（Windows Management Instrumentation）
Worker Role ->> 辅助角色
Workflow ->> 工作流
workgroup ->> 工作组
World Wide Web Consortium ->> 万维网联盟（W3C）
WPF ->> 富客户端表示（Windows Presentation Foundation）
writebehind ->> 后写式
XaaS ->> Everything as a Service，一切皆服务
XML ->> 可扩展标记语言（Extensible Markup Language）
XOR ->> 异或（Exclusive OR）
XUL ->> XML 用户界面语言（XML User Interface Language）
YAGNI ->> 原则，不需要原则（You Aren't Gonna Need It），“你不会用到它3”
Zero-downtime Upgrade ->> 零停机升级
zip disk ->> 压缩磁盘
zone ->> 区域
zone list ->> 区域列表
zone transfer ->> 区域传送